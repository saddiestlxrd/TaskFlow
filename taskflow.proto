syntax = "proto3";

package TaskFlow;

option go_package = "./proto";

message User {
  int32 id = 1;
  string name = 2;
  string email = 3;
  string password = 4;
}

message CreateUserRequest {
  string name = 1;
  string email = 2;
  string password = 3;
}

message CreateUserResponse {
  User user = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  User user = 1;
}

message Task {
  int32 id = 1;
  string title = 2;
  string description = 3;
  bool status = 4;
  string created_at = 5;
  string updated_at = 6;
  string owner = 7; //do not know what is better userid or owner wanna try to use owner instead of userid
}

message CreateTaskRequest {
  string title = 1;
  string description = 2;
  string created_at = 3;
  string updated_at = 4;
  string owner = 5;
}

message CreateTaskResponse {
  Task task = 1;
}

message getUserRequest {
  string id = 1;
}

message getUserResponse {
  User user = 1;
}

message GetTaskRequest {
  string id = 1;
  string owner = 2;
}

message GetTaskResponse {
  repeated Task tasks = 1;
}

message DeleteTaskRequest {
  string id = 1;
  string owner = 2;
}

message DeleteTaskResponse {
  Task task = 1;
}

message UpdateTaskRequest {
  string id = 1;
  string title = 2;
  string description = 3;
  bool status = 4;
  string updated_at = 5;
  string owner = 6;
}

message UpdateTaskResponse {
  Task task = 1;
}

service TaskService {

  //Task
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse);
  rpc GetTask(GetTaskRequest) returns (GetTaskResponse);
  rpc DeleteTask(DeleteTaskRequest) returns (DeleteTaskResponse);
  rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse);

  //User
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc getUser(getUserRequest) returns (getUserResponse);
}
